/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    // const total = document.querySelectorAll(\".section\");\r\n    const up = document.querySelector(\".up\");\r\n    const down = document.querySelector(\".down\");\r\n\r\n    new fullpage(\"#fullpage\", {\r\n        //options here\r\n        autoScrolling: true,\r\n        scrollHorizontally: true,\r\n        navigation: true,\r\n        navigationPosition: \"left\",\r\n        navigationTooltips: [\"firstSlide\", \"secondSlide\"],\r\n        afterLoad: () => {\r\n            const obj = fullpage_api.getActiveSection();\r\n            const page = document.querySelector(\".page\");\r\n            page.innerText = `0${obj.index + 1}`;\r\n        },\r\n        normalScrollElements: \".first__content\",\r\n    });\r\n\r\n    up.addEventListener(\"click\", () => {\r\n        fullpage_api.moveSectionUp();\r\n    });\r\n\r\n    down.addEventListener(\"click\", () => {\r\n        fullpage_api.moveSectionDown();\r\n    });\r\n\r\n    // BURGER\r\n    let burger = document.querySelector(\".burger\");\r\n    let menu = document.querySelector(\".menu\");\r\n    let body = document.querySelector(\"body\");\r\n\r\n    burger.addEventListener(\"click\", function () {\r\n        event.preventDefault();\r\n        burger.classList.toggle(\"burger_active\");\r\n        menu.classList.toggle(\"menu_active\");\r\n        body.classList.toggle(\"body_fixed\");\r\n\r\n        document.addEventListener(\"click\", function (event) {\r\n            if (event.target.classList.contains(\"menu__link\")) {\r\n                burger.classList.remove(\"burger_active\");\r\n                menu.classList.remove(\"menu_active\");\r\n                body.classList.remove(\"body_fixed\");\r\n            }\r\n        });\r\n    });\r\n});\r\n\n\n//# sourceURL=webpack://gulp2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;